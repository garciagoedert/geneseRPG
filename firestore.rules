rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Usuários podem criar seu próprio documento e ler/atualizar seus próprios dados.
    match /users/{userId} {
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }

    // GMs podem ler/escrever qualquer ficha. Jogadores só podem as suas.
    match /characterSheets/{sheetId} {
      allow read, write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'gm' || request.auth.uid == resource.data.ownerId);
    }

    // Todos podem ler, mas apenas GMs podem escrever.
    match /bestiary/{creatureId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'gm';
    }

    // Todos podem ler, mas apenas GMs podem escrever.
    match /spellsAndAbilities/{spellId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'gm';
    }

    // Todos podem ler, mas apenas GMs podem escrever.
    match /items/{itemId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'gm';
    }

    // Usuários podem criar, ler, atualizar e deletar seus próprios mapas.
    match /maps/{mapId} {
      allow read, update, delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
    }
  }
}
